#ifndef MAINWINDOW_H
#define MAINWINDOW_H

#include <QMainWindow>
#include "processmanager.h"
#include <QString>
#include <QWidget>
#include <QTimer>

QT_BEGIN_NAMESPACE
namespace Ui {
class MainWindow;
}
QT_END_NAMESPACE

/**
 * MainWindow class:
 * This class represents the main window of the application.
 * It handles interactions with the UI elements, processes, and manages the window's properties such as TopMost and transparency.
 */
class MainWindow : public QMainWindow
{
    Q_OBJECT

public:
    /**
     * Constructor: Initializes the MainWindow with its parent.
     * @param parent The parent widget.
     */
    explicit MainWindow(QWidget *parent = nullptr);

    /**
     * Destructor: Cleans up the MainWindow and its components.
     */
    ~MainWindow();

private slots:
    /**
     * Slot function: Handles the change event for the TopMost checkbox.
     * Updates the TopMost state of the selected process window.
     */
    void onCbProcessTopMost_CheckedChanged();

    /**
     * Slot function: Called when the process window title is changed by the user.
     * Updates the window title of the target process.
     */
    void onTxtProcessTitle_TextChanged();

    /**
     * Slot function: Handles the change event for the TopMost status of the MainWindow itself.
     * Toggles whether the MainWindow stays on top of other windows.
     */
    void onCWinTopMost_Changed();

    /**
     * Slot function: Handles the change event for the process window size (height or width).
     * Updates the window size of the target process.
     */
    void onSbProcessWindowSize_Changed();

    /**
     * Slot function: Handles the change event for the process window transparency (opacity).
     * Updates the transparency level of the target process.
     */
    void onSbProcessWindowTransparency_Changed();

    /**
     * Slot function: Handles the event when the "Get Process" button is clicked.
     * Retrieves the process details and updates the UI.
     */
    void onBtnGetProcess_Clicked();

    /**
     * Slot function: Handles the event when the "Execute Command" button is clicked.
     * Executes a selected command (KILL, MAXIMIZE, MINIMIZE, FOCUS) on the target process window.
     */
    void onBtnExecuteProcessCommand_Clicked();

private:
    /**
     * Logs a message to the UI's log field with a timestamp.
     * @param message The message to be logged.
     */
    void Log(const QString& message);

    /**
     * Shows or hides the process options group box based on the validity of the process details.
     */
    void ShowOrHideProcessOptions();

    /**
     * Updates the process details in the UI such as process title, window size, and transparency.
     */
    void updateProcessDetails();

    /**
     * Sets up a timer to ensure the MainWindow stays on top if TopMost is enabled.
     */
    void setupTopMostTimer();

    /**
     * Keeps the MainWindow on top of other windows when TopMost is enabled.
     */
    void keepWindowOnTop();

    Ui::MainWindow *ui;             // Pointer to the UI object generated by Qt Designer.
    ProcessInfo info;               // Holds the process information (name, ID, window title, etc.)
    ProcessManager processManager;  // Manages processes and their properties.

    bool isTopMost;                 // Flag to track whether the MainWindow should stay on top of other windows.
};

#endif // MAINWINDOW_H
